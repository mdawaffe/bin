#!/usr/bin/env python
# coding: utf-8
from __future__ import with_statement
import sys, getopt, urllib2, re, os.path

def usage():
    print_err('\nUsage:', sys.argv[0], ' [--trac=<trac-url>] <ticket number>')
    sys.exit(2)

trac_url = 'http://core.trac.wordpress.org'

def escape_shell_arg(s):
    return "'" + s.replace("'", "'\\''") + "'"

def print_err(*items):
    sys.stderr.write(' '.join(map(str, items))+'\n')

def apply_patch(patch_url):
    patch_file_name = os.path.basename(patch_url)
    print 'Applying %s...' % patch_file_name
    patch_content = urllib2.urlopen(patch_url).read()
    with open(patch_file_name, 'w') as patch:
        patch.write(patch_content)
    os.system('patch -p0 < '+escape_shell_arg(patch_file_name))


def extract_attachments(contents):
    matches = re.findall(r'(/raw-attachment/ticket/[^/]+/.+?)" class="trac-rawlink" title="Download">' + u'\xe2\x80\x8b' + '</a>\s*\(<span title="(?:.*?)">(?:.*?)</span>\)\s*-\s*added by <em>(.+?)</em>', contents)
    attachments = list(enumerate({'user': match[1], 'url': trac_url + match[0]} for match in matches if any(match[0].endswith(ext) for ext in ('diff', 'patch'))))
    return attachments

def normalize_http_url(url):
    if not re.match(r'https?://', url):
        url = 'http://' + url
    return url

if __name__ == '__main__':
    try:
        opts, args = getopt.getopt(sys.argv[1:], 't:', ['trac'])
    except getopt.GetoptError, err:
        print_err(err)
        usage()

    for opt, value in opts:
        if opt in ('-t', '--trac'):
            trac_url = normalize_http_url(value)


    if len(args) != 1: usage()

    ticket_url = trac_url.rstrip('/') + '/ticket/%s' % args[0]

    print 'Downloading from %s...' % ticket_url
    contents = urllib2.urlopen(ticket_url).read()

    attachments = extract_attachments(contents)

    if not attachments:
        print 'No diff/patch attachments for this ticket.'
        sys.exit(0)
    elif len(attachments) == 1:
        apply_patch(attachments[0][1]['url'])
        sys.exit(0)
    else:
        print 'Choose a patch to apply:'
    for i, attachment in attachments:
        print '\t ', i, 'â†’', os.path.basename(attachment['url']), 'by', attachment['user']

    while True:
        choice = int(raw_input('\t> '))
        for i, attachment in attachments:
            if (i == choice):
                apply_patch(attachment['url'])
                sys.exit(0)
        print 'No attachment matches your choice. Try again.'